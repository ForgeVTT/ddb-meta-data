name: Build/release

on:
  push:
    tags: 
      - v*

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
    - name: Create Release Zip
      run: cd content; zip -r ../ddb-meta-data.zip .
    - name: Create Release
      id: create_versioned_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: false # set to false if you do not want to allow updates on existing releases
        name: Release ${{ steps.get_version.outputs.VERSION }} # Use the version in the name
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './ddb-meta-data.zip'
        tag: ${{ steps.get_version.outputs.VERSION }} # Use the version as the tag
    - name: Create Latest Release
      id: create_latest_release
      uses: ncipollo/release-action@v1
      if: endsWith(github.ref, 'main') # Only update the latest release when pushing to the master branch
      with:
        allowUpdates: true
        name: Latest
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './ddb-meta-data.zip'
        tag: latest
    - name: Discord notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_HOOK }}
        DISCORD_USERNAME: "Release-O-Bot"
      uses: Ilshidur/action-discord@0.0.2
      with:
        args: 'DDB Adventure Muncher Data Pack ${{ steps.get-version.outputs.version }} has been compiled by our intern Squibble!'
